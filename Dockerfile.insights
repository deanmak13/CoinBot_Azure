FROM python:3.12

EXPOSE 5000

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV PYTHONPATH=/app/insights/src

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && \
    apt-get install -y build-essential wget pkg-config cmake && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Install TA-Lib from source with careful configuration
RUN wget https://github.com/ta-lib/ta-lib/releases/download/v0.6.4/ta-lib-0.6.4-src.tar.gz && \
    tar -xzf ta-lib-0.6.4-src.tar.gz && \
    cd ta-lib-0.6.4 && \
    # Use absolute paths and ensure libraries go to standard locations
    ./configure --prefix=/usr && \
    make && \
    make install && \
    cd .. && \
    rm -rf ta-lib-0.6.4-src.tar.gz ta-lib-0.6.4

# Refresh shared library cache
RUN ldconfig

# Verify TA-Lib installation
RUN ls -la /usr/lib/libta* || echo "TA-Lib not found in /usr/lib" && \
    ls -la /usr/local/lib/libta* || echo "TA-Lib not found in /usr/local/lib"

# Create symbolic links if needed (sometimes helps with library discovery)
RUN if [ -f /usr/lib/libta_lib.so ]; then \
      ln -sf /usr/lib/libta_lib.so /usr/lib/libta-lib.so; \
    elif [ -f /usr/local/lib/libta_lib.so ]; then \
      ln -sf /usr/local/lib/libta_lib.so /usr/local/lib/libta-lib.so; \
    fi

# Now install Python TA-Lib wrapper with specific compiler flags
RUN CFLAGS="-I/usr/include" LDFLAGS="-L/usr/lib" pip install --no-cache-dir TA-Lib

# Install Python dependencies
COPY ./insights /app/insights/
COPY ./config /app/config
COPY ./home /app/home
RUN pip install --no-cache-dir -r /app/insights/requirements.txt

# Create a non-root user
RUN adduser -u 5678 --disabled-password --gecos "" appuser && chown -R appuser /app
USER appuser

CMD ["gunicorn", "--bind", "0.0.0.0:5000", "insights.src.app:app"]